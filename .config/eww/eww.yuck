(include "./modules/workspaces/workspaces.yuck")
(include "./modules/updates/updates.yuck")
(include "./modules/system/resources.yuck")
(include "./modules/sound/speaker.yuck")
(include "./modules/sound/microphone.yuck")


; Windows foldstart
(defwindow bar
  ; :stacking "fg"
  :exclusive true
  ; :focusable false
  :wm-ignore true
  :monitor 0
  :hexpand false
  :vexpand false
  :geometry (geometry :anchor "top center" :x 0 :y 0 :width "100%")
  ; :reserve (struts :distance "15px" :side "top")
  (bar)
)
; foldend

; Bar foldstart
(defwidget bar []
  (box :orientation "h" :space-evenly false :class "bar" 
    (box :halign "start" :space-evenly false
      (workspaces)
      ; (player)
    )
    (box :halign "end" :spacing 15 :hexpand true :space-evenly false 
      (notifications)
      (updates)
      ;(trash)
      ;(noisetorch)
      (microphone)
      (speaker)
      ;(ping)
      ;(network)
      (sys.disk)
      (sys.home_disk)
      (sys.cpu)
      (sys.ram)
      (sys.gpu)
      (date)
      (time)
    )
  )
)
; foldend

; Variables foldstart
(defpoll time_poll :interval "1s" "date +%H:%M")
(defpoll date_poll :interval "1m" "date +%d/%m/%Y")
; (defpoll trash_poll :interval "10s" "./modules/trash.sh")
; (defpoll noisetorch_poll :initial "" :interval "10s" "./modules/noisetorch.sh")
; (defpoll github_poll :initial "" :interval "1m" "./modules/github.sh")
; (defpoll ping_poll :interval "10s" "./modules/ping.sh")

; (deflisten workspaces_listen "./modules/workspaces.sh")
(deflisten player_listen :initial '{"show": "no", "content": ""}' "./modules/player.sh")
(deflisten notifications_listen :initial '{"show": "no", "content": ""}' "./modules/notifications.sh")


; Modules foldstart
; Generic icon module foldstart
(defwidget icon-module [icon ?class ?visible]
  (box :class "${class} icon-module"
       :orientation "h"
       :halign "end"
       :space-evenly false
       :visible {visible ?: true} ; because the argument is optional
    (label :class "icon-module__icon" :text "${icon}")
    (children)))
; foldend

; Polybar-Style modules foldstart
; (defwidget workspaces []  (literal :content workspaces_listen))

(defwidget player []
  (icon-module :class "player" :icon "" :visible {player_listen.show == "yes"}
    (literal :content {player_listen.content})))

(defwidget notifications []
  (icon-module :class "notifications" :icon "" :visible {notifications_listen.show == "yes"}
    (literal :content {notifications_listen.content}))) 

(defwidget date []
  (icon-module :class "date" :icon "" 
    (label :text date_poll)))

(defwidget time []
  (icon-module :class "time" :icon "" 
    (label :text time_poll))) 


;(defwidget trash []
;  (icon-module :class "trash" :icon "" 
;    (label :text trash_poll))) 
;
;(defwidget noisetorch []
;  (icon-module :class "noisetorch" :icon "" 
;    (label :text noisetorch_poll))) 
;

;(defwidget ping []
;  (icon-module :class "ping" :icon ""
;    (label :text ping_poll))) 

;(defwidget network []
;  (icon-module :class "network" :icon ""
;    (label :text "${round(EWW_NET.enp42s0.NET_UP / 1000000, 2)}/${round(EWW_NET.enp42s0.NET_DOWN / 1000000, 2)}"))) 
;

; vim:foldmarker=foldstart,foldend
